//to make 0x13AE3B0 branch to NETWORK_INCREMENT_STAT, 0x13AE618 to branch to, 0x13AE3C0 write the branch
//*(volatile unsigned int*)0x13AE3C0 = 0x48000258;//b 0x258;
__ALWAYS_INLINE bool canCreateAnEvent() {
	/*unsigned int val = *(volatile unsigned int*)(*(volatile int*)0x1CF72B0+0x18);
	if (val == 0)
		return false;
	if (*(volatile int*)(val+0x8) == 0)
		return false;
	*/
	//return true;//temporary patch for that ya silly willy
	if (*(volatile int*)(*(volatile unsigned int*)0x1CC4A54+0x10) == -1 || *(volatile int*)(*(volatile unsigned int*)0x1CC4A54+0x14) == -1)
		return false;
	return true;
}
bool NETWORK_INCREMENT_STAT_CALL(int player, unsigned int hash, int amount) {
	randomizeAddresses();
	if (I_AM_ONLINE > 0) {
		//randomizeAddresses();
		if (player == PLAYER::PLAYER_ID()) {
			//randomizeAddresses();
			int prev = 0;
			//randomizeAddresses();
			STATS::STAT_GET_INT(hash,&prev,1);
			//randomizeAddresses();
			STATS::STAT_SET_INT(hash,amount+prev,1);
			//randomizeAddresses();
			return true;
			//randomizeAddresses();
		}
		randomizeAddresses();
		opd_s NETWORK_INCREMENT_STAT_t = {addrstruct().allClientStatsAddress^dataDecryptor()/*0x12D141C is original, 0x13AE3B0 is for the funny patch thing*/,TOC};
		//randomizeAddresses();
		void (*NETWORK_INCREMENT_STAT1)(unsigned int hash, int amount, CNetGamePlayer *playerDataPointer) = (void(*)(unsigned int, int, CNetGamePlayer *))&NETWORK_INCREMENT_STAT_t;
		//randomizeAddresses();
		setPlayerStatInt(player,hash%80,amount,true);
		//if (*(volatile int*)(*(volatile unsigned int*)0x1CC4A54+0x10) == -1 || *(volatile int*)(*(volatile unsigned int*)0x1CC4A54+0x14) == -1) {
		if (canCreateAnEvent() == false) {
			return false;
		} else {
			NETWORK_INCREMENT_STAT1(hash,amount,getCNetGamePlayer(player));
		}
		randomizeAddresses();
	}
	randomizeAddresses();
	return true;
}
/*
unsigned int getCNetGamePlayer(int player) {
	opd_s getCNetGamePlayer_t = {0x47E00C,TOC};
	unsigned int (*getCNetGamePlayer_1)(int entity,int one) = (unsigned int(*)(int,int))&getCNetGamePlayer_t;
	return getCNetGamePlayer_1(player,1);
}
opd_s NETWORK_INCREMENT_STAT_t = {0x12D141C,TOC};
void (*NETWORK_INCREMENT_STAT)(unsigned int hash, int amount, unsigned int playerDataPointer) = (void(*)(unsigned int, int, unsigned int))&NETWORK_INCREMENT_STAT_t;
NETWORK_INCREMENT_STAT(hash,amount,getCNetGamePlayer(player));
*/
//NETWORK_BOI_INCREMENT_STAT_YO = 586387440
/*ScriptArg NETWORK_INCREMENT_STAT_WRAPPER(NativeArg_s *args) {
	args = (NativeArg_s*)0x10060000;//for some reason it is passing the opd struct instead of this value, the real one.
	//printf("Arg Count: 0x%X, Player %i, hash: 0x%X, value: %i\n",args->ArgCount,args->ArgValues[0].i, args->ArgValues[1].ui, args->ArgValues[2].ui);
	//__asm__("tw");
	NETWORK_INCREMENT_STAT_CALL(args->ArgValues[0].i, args->ArgValues[1].ui, args->ArgValues[2].ui);
	//printf("Done calling increment stat\n");
}*/
/*
void addStatNative() {
	addNative(NETWORK_INCREMENT_STAT_WRAPPER,586387440);
}*/

bool globalStatCheckReturnVal = true;
static void NETWORK_INCREMENT_STAT(int player, unsigned int hash, int amount) { /*randomizeAddresses();*/globalStatCheckReturnVal = NETWORK_INCREMENT_STAT_CALL(player,hash,amount);/*randomizeAddresses();*//*invoke<Void>(586387440, player, hash, amount);*/ }
//static void NETWORK_INCREMENT_STAT(int player, unsigned int hash, unsigned int amount) { invoke<Void>(586387440, player, hash, amount); } // 0xDDFE9FBC

namespace allClientStats {
	void checkIfStatsWorked() {
		if (I_AM_ONLINE > 0) {
			if (globalStatCheckReturnVal == true)
				print2("~g~Stat set!",2000);
			else
				print2("~r~Error sending stat!",2000);
		} else
			print2("~r~You are not online!",2000);
	}
	void clearReports(int player) {
		NETWORK_INCREMENT_STAT(player,-2062747369, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_REPORT_STRENGTH")
		NETWORK_INCREMENT_STAT(player,-1381505069, 100);//GAMEPLAY::GET_HASH_KEY("MPPLY_COMMEND_STRENGTH")
		NETWORK_INCREMENT_STAT(player,-621080327, 100);//GAMEPLAY::GET_HASH_KEY("MPPLY_FRIENDLY")
		NETWORK_INCREMENT_STAT(player,-1992420464, 100);//GAMEPLAY::GET_HASH_KEY("MPPLY_HELPFUL")
		NETWORK_INCREMENT_STAT(player,-1670771646, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_GRIEFING")
		NETWORK_INCREMENT_STAT(player,1659604058, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_VC_ANNOYINGME")
		NETWORK_INCREMENT_STAT(player,242250445, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_VC_HATE")
		NETWORK_INCREMENT_STAT(player,1021002722, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_OFFENSIVE_LANGUAGE")
		NETWORK_INCREMENT_STAT(player,-386175531, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_OFFENSIVE_TAGPLATE")
		NETWORK_INCREMENT_STAT(player,-203536263, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_OFFENSIVE_UGC")
		NETWORK_INCREMENT_STAT(player,-1440509968, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_BAD_CREW_NAME")
		NETWORK_INCREMENT_STAT(player,55646841, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_BAD_CREW_MOTTO")
		NETWORK_INCREMENT_STAT(player,995519836, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_BAD_CREW_STATUS")
		NETWORK_INCREMENT_STAT(player,915369945, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_BAD_CREW_EMBLEM")
		NETWORK_INCREMENT_STAT(player,-872610652, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_GAME_EXPLOITS")
		NETWORK_INCREMENT_STAT(player,-1619412469, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_EXPLOITS")
		NETWORK_INCREMENT_STAT(player,-230175679, 0);//GAMEPLAY::GET_HASH_KEY("MPPLY_ISPUNISHED")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Cleared your reports",player,true);
		checkIfStatsWorked();
	}

	void heists(int player) {
		NETWORK_INCREMENT_STAT(player,-1251037803, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_VEHICLE_1_UNLCK")
		NETWORK_INCREMENT_STAT(player,1029538304, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_VEHICLE_2_UNLCK")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Given heist unlocks",player,true);
		checkIfStatsWorked();
	}


	void badsport(int player) {
		NETWORK_INCREMENT_STAT(player,-483478519, INT_MIN);//GAMEPLAY::GET_HASH_KEY("MP0_BAD_SPORT_BITSET")
		NETWORK_INCREMENT_STAT(player,243754906, INT_MIN);//GAMEPLAY::GET_HASH_KEY("MP0_MPPLY_WAS_I_BAD_SPORT")
		NETWORK_INCREMENT_STAT(player,1599596970, INT_MIN);//GAMEPLAY::GET_HASH_KEY("MP0_MPPLY_OVERALL_BADSPORT")
		NETWORK_INCREMENT_STAT(player,1690012967, INT_MIN);//GAMEPLAY::GET_HASH_KEY("MP0_MPPLY_CHAR_IS_BADSPORT")
		NETWORK_INCREMENT_STAT(player,689138343, INT_MIN);//GAMEPLAY::GET_HASH_KEY("MP0_MPPLY_BECAME_BADSPORT_NUM")
		NETWORK_INCREMENT_STAT(player,-598645583, INT_MIN);//GAMEPLAY::GET_HASH_KEY("MP0_MPPLY_DESTROYED_PVEHICLES")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Removed from badsport",player,true);
		checkIfStatsWorked();
	}

	void setintobadsport(int player) {
		NETWORK_INCREMENT_STAT(player,-483478519, 99999999);//GAMEPLAY::GET_HASH_KEY("MP0_BAD_SPORT_BITSET")
		NETWORK_INCREMENT_STAT(player,243754906, 99999999);//GAMEPLAY::GET_HASH_KEY("MP0_MPPLY_WAS_I_BAD_SPORT")
		NETWORK_INCREMENT_STAT(player,1599596970, 99999999);//GAMEPLAY::GET_HASH_KEY("MP0_MPPLY_OVERALL_BADSPORT")
		NETWORK_INCREMENT_STAT(player,1690012967, 99999999);//GAMEPLAY::GET_HASH_KEY("MP0_MPPLY_CHAR_IS_BADSPORT")
		NETWORK_INCREMENT_STAT(player,689138343, 99999999);//GAMEPLAY::GET_HASH_KEY("MP0_MPPLY_BECAME_BADSPORT_NUM")
		NETWORK_INCREMENT_STAT(player,-598645583, 99999999);//GAMEPLAY::GET_HASH_KEY("MP0_MPPLY_DESTROYED_PVEHICLES")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Set in to badsport",player,true);
		checkIfStatsWorked();
	}
	
	void skills(int player) {
		NETWORK_INCREMENT_STAT(player,-1404443570, 100);//GAMEPLAY::GET_HASH_KEY("MP0_SCRIPT_INCREASE_STAM")
		NETWORK_INCREMENT_STAT(player,956109026, 100);//GAMEPLAY::GET_HASH_KEY("MP0_SCRIPT_INCREASE_STRN")
		NETWORK_INCREMENT_STAT(player,-2126859843, 100);//GAMEPLAY::GET_HASH_KEY("MP0_SCRIPT_INCREASE_LUNG")
		NETWORK_INCREMENT_STAT(player,1061495084, 100);//GAMEPLAY::GET_HASH_KEY("MP0_SCRIPT_INCREASE_DRIV")
		NETWORK_INCREMENT_STAT(player,1729508605, 100);//GAMEPLAY::GET_HASH_KEY("MP0_SCRIPT_INCREASE_FLY")
		NETWORK_INCREMENT_STAT(player,-21187325, 100);//stealth MP0_SCRIPT_INCREASE_STL
		NETWORK_INCREMENT_STAT(player,1127000018, 100);//shooting MP0_SCRIPT_INCREASE_SHO
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Set max skills",player,true);
		checkIfStatsWorked();
	}

	void tats(int player) {
		NETWORK_INCREMENT_STAT(player,1278097481, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_DM_WINS")
		NETWORK_INCREMENT_STAT(player,-998653135, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_TDM_MVP")
		NETWORK_INCREMENT_STAT(player,-87823592, 500);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_DM_TOTALKILLS")
		NETWORK_INCREMENT_STAT(/*bool*/player,1239667547, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMATTGANGHQ")
		NETWORK_INCREMENT_STAT(player,-1415480846, 50000);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMBBETWIN")
		NETWORK_INCREMENT_STAT(/*bool*/player,-1109765196, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMWINEVERYGAMEMODE")
		NETWORK_INCREMENT_STAT(/*bool*/player,1700662189, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMRACEWORLDRECHOLDER")
		NETWORK_INCREMENT_STAT(/*bool*/player,-381211724, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMFULLYMODDEDCAR")
		NETWORK_INCREMENT_STAT(/*bool*/player,-1004828825, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMMOSTKILLSSURVIVE")
		NETWORK_INCREMENT_STAT(/*bool*/player,1138061229, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMKILL3ANDWINGTARACE")
		NETWORK_INCREMENT_STAT(player,-76860943, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMKILLBOUNTY")
		NETWORK_INCREMENT_STAT(player,-1292663281, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMREVENGEKILLSDM")
		NETWORK_INCREMENT_STAT(/*bool*/player,815383550, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMKILLSTREAKSDM")
		NETWORK_INCREMENT_STAT(player,317960977, 20);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_HOLD_UP_SHOPS")
		NETWORK_INCREMENT_STAT(player,1125406782, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_LAPDANCES")
		NETWORK_INCREMENT_STAT(player,1410589929, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_SECURITY_CARS_ROBBED")
		NETWORK_INCREMENT_STAT(player,1412455110, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_RACES_WON")
		NETWORK_INCREMENT_STAT(player,-1427600849, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_CAR_BOMBS_ENEMY_KILLS")
		NETWORK_INCREMENT_STAT(player,-299501239, 500);//GAMEPLAY::GET_HASH_KEY("MP0_PLAYER_HEADSHOTS")
		NETWORK_INCREMENT_STAT(player,-805976960, 1000);//GAMEPLAY::GET_HASH_KEY("MP0_DB_PLAYER_KILLS")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Unlocked all tatoos",player,true);
		checkIfStatsWorked(); 
	}

	void snacks(int player) {
		NETWORK_INCREMENT_STAT(player,-1140608990, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_NO_BOUGHT_YUM_SNACKS")
		NETWORK_INCREMENT_STAT(player,-1311951306, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_NO_BOUGHT_HEALTH_SNACKS")
		NETWORK_INCREMENT_STAT(player,2098164755, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_NO_BOUGHT_EPIC_SNACKS")
		NETWORK_INCREMENT_STAT(player,-1197379633, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_NUMBER_OF_ORANGE_BOUGHT")
		NETWORK_INCREMENT_STAT(player,2022518763, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_CIGARETTES_BOUGHT")
		//PlayerMods::notify("~b~PARADISE SPRX\n~r~Given infinite snacks",player,true);
		checkIfStatsWorked();
	}

	void armor(int player) {
		NETWORK_INCREMENT_STAT(player,1318518996, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_ARMOUR_1_COUNT")
		NETWORK_INCREMENT_STAT(player,703117230, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_ARMOUR_2_COUNT")
		NETWORK_INCREMENT_STAT(player,-838060034, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_ARMOUR_3_COUNT")
		NETWORK_INCREMENT_STAT(player,367463498, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_ARMOUR_4_COUNT")
		NETWORK_INCREMENT_STAT(player,-1044525273, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_ARMOUR_5_COUNT")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Max armor set",player,true);
		checkIfStatsWorked();
	}

	void fireworks(int player) {
		NETWORK_INCREMENT_STAT(player,-1392905790, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_FIREWORK_TYPE_1_WHITE")
		NETWORK_INCREMENT_STAT(player,1303025466, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_FIREWORK_TYPE_1_RED")
		NETWORK_INCREMENT_STAT(player,-1511614005, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_FIREWORK_TYPE_1_BLUE")
		NETWORK_INCREMENT_STAT(player,12027550, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_FIREWORK_TYPE_2_WHITE")
		NETWORK_INCREMENT_STAT(player,637347524, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_FIREWORK_TYPE_2_RED")
		NETWORK_INCREMENT_STAT(player,218944052, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_FIREWORK_TYPE_2_BLUE")
		NETWORK_INCREMENT_STAT(player,-1106641514, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_FIREWORK_TYPE_3_WHITE")
		NETWORK_INCREMENT_STAT(player,1011774369, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_FIREWORK_TYPE_3_RED")
		NETWORK_INCREMENT_STAT(player,881233875, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_FIREWORK_TYPE_3_BLUE")
		NETWORK_INCREMENT_STAT(player,160145702, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_FIREWORK_TYPE_4_WHITE")
		NETWORK_INCREMENT_STAT(player,-514481206, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_FIREWORK_TYPE_4_RED")
		NETWORK_INCREMENT_STAT(player,-1663656508, 2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_FIREWORK_TYPE_4_BLUE")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Given fireworks",player,true);
		checkIfStatsWorked();
	}

	void camos(int player) {
		NETWORK_INCREMENT_STAT(player,-1384973326, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_1_FM_UNLCK")
		NETWORK_INCREMENT_STAT(player,1086131077, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_2_FM_UNLCK")
		NETWORK_INCREMENT_STAT(player,-307669730, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_3_FM_UNLCK")
		NETWORK_INCREMENT_STAT(player,1527360442, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_4_FM_UNLCK")
		NETWORK_INCREMENT_STAT(player,-1296107531, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_5_FM_UNLCK")
		NETWORK_INCREMENT_STAT(player,-693234545, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_6_FM_UNLCK")
		NETWORK_INCREMENT_STAT(player,1861444511, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_7_FM_UNLCK")
		NETWORK_INCREMENT_STAT(player,1318300530, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_8_FM_UNLCK")
		NETWORK_INCREMENT_STAT(player,-648488581, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_9_FM_UNLCK")
		NETWORK_INCREMENT_STAT(player,-1410973352, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_10_FM_UNLCK")
		NETWORK_INCREMENT_STAT(player,-1828339712, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_11_FM_UNLCK")
		NETWORK_INCREMENT_STAT(player,-381689329, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_12_FM_UNLCK")
		NETWORK_INCREMENT_STAT(player,1031193196, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_FM_PURCHASE")
		NETWORK_INCREMENT_STAT(player,1494828510, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_FM_PURCHASE2")
		NETWORK_INCREMENT_STAT(player,1726013805, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_FM_PURCHASE3")
		NETWORK_INCREMENT_STAT(player,1025936889, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_FM_PURCHASE4")
		NETWORK_INCREMENT_STAT(player,-1131017006, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_FM_PURCHASE5")
		NETWORK_INCREMENT_STAT(player,-899372945, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_FM_PURCHASE6")
		NETWORK_INCREMENT_STAT(player,-1579526305, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_FM_PURCHASE7")
		NETWORK_INCREMENT_STAT(player,-1341393982, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_FM_PURCHASE8")
		NETWORK_INCREMENT_STAT(player,-657799873, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_FM_PURCHASE9")
		NETWORK_INCREMENT_STAT(player,1928411104, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_FM_PURCHASE10")
		NETWORK_INCREMENT_STAT(player,-222546068, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_FM_PURCHASE11")
		NETWORK_INCREMENT_STAT(player,1233433, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_KIT_FM_PURCHASE12")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Given all camos",player,true);
		checkIfStatsWorked();
	}

	void freeRims(int player) {
		NETWORK_INCREMENT_STAT(player,-806952586, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_WIN_CAPTURES")
		NETWORK_INCREMENT_STAT(player,1648951775, 100);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_DROPOFF_CAP_PACKAGES")
		NETWORK_INCREMENT_STAT(player,-1136385610, 100);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_KILL_CARRIER_CAPTURE")
		NETWORK_INCREMENT_STAT(player,49659791, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FINISH_HEISTS")
		NETWORK_INCREMENT_STAT(player,-456864623, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FINISH_HEIST_SETUP_JOB")
		NETWORK_INCREMENT_STAT(player,1016950611, 100);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_NIGHTVISION_KILLS, 100")//this one was a bit messed up lol
		NETWORK_INCREMENT_STAT(player,-1789629296, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_WIN_LAST_TEAM_STANDINGS")
		NETWORK_INCREMENT_STAT(player,-1435377785, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_ONLY_PLAYER_ALIVE_LTS")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Chrome rims are now free",player,true);
		checkIfStatsWorked();
	}

	void shirts(int player) {
		NETWORK_INCREMENT_STAT(player,-2093141614, 10);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMHORDWAVESSURVIVE")
		NETWORK_INCREMENT_STAT(player,719861732, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMPICKUPDLCCRATE1ST")
		NETWORK_INCREMENT_STAT(player,1758547022, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_WIN_CAPTURE_DONT_DYING")
		NETWORK_INCREMENT_STAT(player,1191204316, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_DO_HEIST_AS_MEMBER")
		NETWORK_INCREMENT_STAT(player,809598996, 100);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_PICKUP_CAP_PACKAGES")
		NETWORK_INCREMENT_STAT(/*bool*/player,-1661743079, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FINISH_HEIST_NO_DAMAGE")
		NETWORK_INCREMENT_STAT(player,-1616908228, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_WIN_GOLD_MEDAL_HEISTS")
		NETWORK_INCREMENT_STAT(player,1227935825, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_KILL_TEAM_YOURSELF_LTS")
		NETWORK_INCREMENT_STAT(player,-492195644, 100);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_KILL_PSYCHOPATHS")
		NETWORK_INCREMENT_STAT(player,-1020650023, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_DO_HEIST_AS_THE_LEADER")
		NETWORK_INCREMENT_STAT(/*bool*/player,73099026, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_STORE_20_CAR_IN_GARAGES")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Unlocked all tshirts",player,true);
		checkIfStatsWorked();
	}

	void lsc(int player) {
		NETWORK_INCREMENT_STAT(player,967270483, 50);//GAMEPLAY::GET_HASH_KEY("MP0_RACES_WON")
		NETWORK_INCREMENT_STAT(player,887231826, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_CARMOD_1_UNLCK")
		NETWORK_INCREMENT_STAT(player,-2011231714, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_CARMOD_2_UNLCK")
		NETWORK_INCREMENT_STAT(player,1321152210, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_CARMOD_3_UNLCK")
		NETWORK_INCREMENT_STAT(player,-360717492, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_CARMOD_4_UNLCK")
		NETWORK_INCREMENT_STAT(player,-770942872, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_CARMOD_5_UNLCK")
		NETWORK_INCREMENT_STAT(player,-1092014914, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_CARMOD_6_UNLCK")
		NETWORK_INCREMENT_STAT(player,1300595566, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_CARMOD_7_UNLCK")
		NETWORK_INCREMENT_STAT(player,-1151657322, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMRALLYWONDRIVE")
		NETWORK_INCREMENT_STAT(player,1793202205, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMRALLYWONNAV")
		NETWORK_INCREMENT_STAT(player,-977210746, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMWINSEARACE")
		NETWORK_INCREMENT_STAT(player,1086265910, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMWINAIRRACE")
		NETWORK_INCREMENT_STAT(player,331789489, 50);//GAMEPLAY::GET_HASH_KEY("MP0_NUMBER_TURBO_STARTS_IN_RACE")
		NETWORK_INCREMENT_STAT(player,319232911, 50);//GAMEPLAY::GET_HASH_KEY("MP0_USJS_COMPLETED")
		NETWORK_INCREMENT_STAT(player,-1052946630, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_RACES_FASTEST_LAP")
		NETWORK_INCREMENT_STAT(player,-1392118522, 100);//GAMEPLAY::GET_HASH_KEY("MP0_NUMBER_SLIPSTREAMS_IN_RACE")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~All los santos customs options unlocked",player,true);
		checkIfStatsWorked();
	}

	void trophies(int player) {
		NETWORK_INCREMENT_STAT(player,-299501239, 500);//GAMEPLAY::GET_HASH_KEY("MP0_PLAYER_HEADSHOTS")
NETWORK_INCREMENT_STAT(player,571930542, 500);//GAMEPLAY::GET_HASH_KEY("MP0_PISTOL_ENEMY_KILLS")
NETWORK_INCREMENT_STAT(player,28408466, 500);//GAMEPLAY::GET_HASH_KEY("MP0_SAWNOFF_ENEMY_KILLS")
NETWORK_INCREMENT_STAT(player,-1312297717, 500);//GAMEPLAY::GET_HASH_KEY("MP0_MICROSMG_ENEMY_KILLS")
NETWORK_INCREMENT_STAT(player,69391120, 100);//GAMEPLAY::GET_HASH_KEY("MP0_SNIPERRFL_ENEMY_KILLS")
NETWORK_INCREMENT_STAT(player,2068313031, 50);//GAMEPLAY::GET_HASH_KEY("MP0_UNARMED_ENEMY_KILLS")
NETWORK_INCREMENT_STAT(player,545769292, 50);//GAMEPLAY::GET_HASH_KEY("MP0_STKYBMB_ENEMY_KILLS")
NETWORK_INCREMENT_STAT(player,-2050255233, 50);//GAMEPLAY::GET_HASH_KEY("MP0_GRENADE_ENEMY_KILLS")
NETWORK_INCREMENT_STAT(player,-1204994989, 50);//GAMEPLAY::GET_HASH_KEY("MP0_RPG_ENEMY_KILLS")
NETWORK_INCREMENT_STAT(player,-1571423526, 500);//GAMEPLAY::GET_HASH_KEY("MP0_CARS_EXPLODED")
NETWORK_INCREMENT_STAT(player,-1103279159, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_5STAR_WANTED_AVOIDANCE")
NETWORK_INCREMENT_STAT(player,-1427600849, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_CAR_BOMBS_ENEMY_KILLS")
NETWORK_INCREMENT_STAT(player,1792589590, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_CARS_EXPORTED")
NETWORK_INCREMENT_STAT(player,768699214, 100);//GAMEPLAY::GET_HASH_KEY("MP0_PASS_DB_PLAYER_KILLS")
NETWORK_INCREMENT_STAT(player,1278097481, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_DM_WINS")
NETWORK_INCREMENT_STAT(player,-397994644, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_GOLF_WON")
NETWORK_INCREMENT_STAT(player,-1629537577, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_GTA_RACES_WON")
NETWORK_INCREMENT_STAT(player,1948190776, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_SHOOTRANG_CT_WON")
NETWORK_INCREMENT_STAT(player,-356496178, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_SHOOTRANG_RT_WON")
NETWORK_INCREMENT_STAT(player,-1987204234, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_SHOOTRANG_TG_WON")
NETWORK_INCREMENT_STAT(player,531468878, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_TDM_WINS")
NETWORK_INCREMENT_STAT(player,-451279900, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_TENNIS_WON")
NETWORK_INCREMENT_STAT(player,-370868036, 5);//GAMEPLAY::GET_HASH_KEY("MP0_MOST_SPINS_IN_ONE_JUMP")
NETWORK_INCREMENT_STAT(player,2037198186, 25);//GAMEPLAY::GET_HASH_KEY("MPPLY_AWD_FM_CR_DM_MADE")
NETWORK_INCREMENT_STAT(player,-2093141614, 10);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMHORDWAVESSURVIVE")
NETWORK_INCREMENT_STAT(player,317960977, 20);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_HOLD_UP_SHOPS")
NETWORK_INCREMENT_STAT(player,-1437021539, 500);//GAMEPLAY::GET_HASH_KEY("MP0_ASLTRIFLE_ENEMY_KILLS")
NETWORK_INCREMENT_STAT(player,767695043, 500);//GAMEPLAY::GET_HASH_KEY("MP0_MG_ENEMY_KILLS")
NETWORK_INCREMENT_STAT(player,1125406782, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_LAPDANCES")
NETWORK_INCREMENT_STAT(player,-640016050, 25);//GAMEPLAY::GET_HASH_KEY("MP0_MOST_ARM_WRESTLING_WINS")
NETWORK_INCREMENT_STAT(player,-1539540308, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_NO_HAIRCUTS")
NETWORK_INCREMENT_STAT(player,1412455110, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_RACES_WON")
NETWORK_INCREMENT_STAT(player,1410589929, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_SECURITY_CARS_ROBBED")
NETWORK_INCREMENT_STAT(player,-1908477769, 500);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_VEHICLES_JACKEDR")
NETWORK_INCREMENT_STAT(player,1172390698, 5);//GAMEPLAY::GET_HASH_KEY("MP0_MOST_FLIPS_IN_ONE_JUMP")
NETWORK_INCREMENT_STAT(player,664151506, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_WIN_AT_DARTS")
NETWORK_INCREMENT_STAT(player,1916746198, 4);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_PASSENGERTIME")
NETWORK_INCREMENT_STAT(player,1698336643, 4);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_TIME_IN_HELICOPTER")
NETWORK_INCREMENT_STAT(player,423794852, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_DM_3KILLSAMEGUY")
NETWORK_INCREMENT_STAT(player,-468561443, 100);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_DM_KILLSTREAK")
NETWORK_INCREMENT_STAT(player,-2080292321, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_DM_STOLENKILL")
NETWORK_INCREMENT_STAT(player,-87823592, 500);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_DM_TOTALKILLS")
NETWORK_INCREMENT_STAT(player,-1752407021, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_GOLF_BIRDIES")
NETWORK_INCREMENT_STAT(/*bool*/player,584671855, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_GOLF_HOLE_IN_1")
NETWORK_INCREMENT_STAT(player,627088809, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_RACE_LAST_FIRST, 25")// a bit messed up
NETWORK_INCREMENT_STAT(player,-1052946630, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_RACES_FASTEST_LAP, 25")//a bit messed up
NETWORK_INCREMENT_STAT(/*bool*/player,738077592, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_SHOOTRANG_GRAN_WON")
NETWORK_INCREMENT_STAT(player,-998653135, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_TDM_MVP")
NETWORK_INCREMENT_STAT(player,1882649704, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_TENNIS_ACE")
NETWORK_INCREMENT_STAT(/*bool*/player,214581478, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_TENNIS_STASETWIN")
NETWORK_INCREMENT_STAT(/*bool*/player,-1228597678, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM6DARTCHKOUT")
NETWORK_INCREMENT_STAT(/*bool*/player,1239667547, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMATTGANGHQ")
NETWORK_INCREMENT_STAT(player,506542528, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_PARACHUTE_JUMPS_20M")
NETWORK_INCREMENT_STAT(player,-649047625, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_PARACHUTE_JUMPS_50M")
NETWORK_INCREMENT_STAT(player,-1970829593, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AIR_LAUNCHES_OVER_40M")
NETWORK_INCREMENT_STAT(/*bool*/player,569908385, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_BUY_EVERY_GUN")
NETWORK_INCREMENT_STAT(/*bool*/player,-1109765196, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMWINEVERYGAMEMODE")
NETWORK_INCREMENT_STAT(player,636291230, 255);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMDRIVEWITHOUTCRASH")
NETWORK_INCREMENT_STAT(player,40312787, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMCRATEDROPS")
NETWORK_INCREMENT_STAT(/*bool*/player,1507741148, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM25DIFFERENTDM")
NETWORK_INCREMENT_STAT(/*bool*/player,1776795752, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM_TENNIS_5_SET_WINS")
NETWORK_INCREMENT_STAT(player,-536079583, 100);//GAMEPLAY::GET_HASH_KEY("MPPLY_AWD_FM_CR_PLAYED_BY_PEEP")
NETWORK_INCREMENT_STAT(player,-707450979, 25);//GAMEPLAY::GET_HASH_KEY("MPPLY_AWD_FM_CR_RACES_MADE")
NETWORK_INCREMENT_STAT(/*bool*/player,-1259312081, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM25DIFFERENTRACES")
NETWORK_INCREMENT_STAT(/*bool*/player,-1683935980, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FM25DIFITEMSCLOTHES")
NETWORK_INCREMENT_STAT(/*bool*/player,-381211724, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMFULLYMODDEDCAR")
NETWORK_INCREMENT_STAT(player,-76860943, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMKILLBOUNTY")
NETWORK_INCREMENT_STAT(player,2077765393, 1000);//GAMEPLAY::GET_HASH_KEY("MP0_KILLS_PLAYERS")
NETWORK_INCREMENT_STAT(/*bool*/player,719861732, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMPICKUPDLCCRATE1ST")
NETWORK_INCREMENT_STAT(player,-299433182, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMSHOOTDOWNCOPHELI")
NETWORK_INCREMENT_STAT(/*bool*/player,1138061229, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMKILL3ANDWINGTARACE")
NETWORK_INCREMENT_STAT(/*bool*/player,815383550, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMKILLSTREAKSDM")
NETWORK_INCREMENT_STAT(/*bool*/player,1497496493, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMMOSTKILLSGANGHIDE")
NETWORK_INCREMENT_STAT(/*bool*/player,-1004828825, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMMOSTKILLSSURVIVE")
NETWORK_INCREMENT_STAT(/*bool*/player,1700662189, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMRACEWORLDRECHOLDER")
NETWORK_INCREMENT_STAT(player,-1151657322, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMRALLYWONDRIVE")
NETWORK_INCREMENT_STAT(player,1793202205, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMRALLYWONNAV")
NETWORK_INCREMENT_STAT(player,-1292663281, 50);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMREVENGEKILLSDM")
NETWORK_INCREMENT_STAT(player,1086265910, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMWINAIRRACE")
NETWORK_INCREMENT_STAT(/*bool*/player,1897999839, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMWINCUSTOMRACE")
NETWORK_INCREMENT_STAT(player,-1592019530, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMWINRACETOPOINTS")
NETWORK_INCREMENT_STAT(player,-977210746, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMWINSEARACE")
NETWORK_INCREMENT_STAT(player,-448768067, 25);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMBASEJMP")
NETWORK_INCREMENT_STAT(/*bool*/player,-634852380, 1);//GAMEPLAY::GET_HASH_KEY("MP0_MP0_AWD_FMWINALLRACEMODES")
NETWORK_INCREMENT_STAT(/*bool*/player,-481163198, 1);//GAMEPLAY::GET_HASH_KEY("MP0_AWD_FMTATTOOALLBODYPARTS")
NETWORK_INCREMENT_STAT(player,1772424717, 2147483647);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_WANTED_LEVEL_TIME5STAR")
NETWORK_INCREMENT_STAT(/*float*/player,-1321121570, 1000);//GAMEPLAY::GET_HASH_KEY("MP0_LONGEST_WHEELIE_DIST")

NETWORK_INCREMENT_STAT(player,1405459086, -1);//GAMEPLAY::GET_HASH_KEY("MPPLY_HEIST_ACH_TRACKER")
PlayerMods::notify("~b~PARADISE SPRX\n~r~Given all trophies",player,true);
checkIfStatsWorked();

	}

	void hair(int player) {
		NETWORK_INCREMENT_STAT(player,1019621738, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR")
		NETWORK_INCREMENT_STAT(player,1349922967, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_1")
		NETWORK_INCREMENT_STAT(player,1739415301, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_2")
		NETWORK_INCREMENT_STAT(player,756509146, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_3")
		NETWORK_INCREMENT_STAT(player,1114215550, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_4")
		NETWORK_INCREMENT_STAT(player,744777832, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_5")
		NETWORK_INCREMENT_STAT(player,1122014560, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_6")
		NETWORK_INCREMENT_STAT(player,168272815, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CLTHS_AVAILABLE_HAIR_7")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Unlocked hairs",player,true);
		checkIfStatsWorked();
	}

	void weapons(int player) {
		NETWORK_INCREMENT_STAT(player,1802999651, -1);//GAMEPLAY::GET_HASH_KEY("MP0_ADMIN_WEAPON_GV_BS_1")
		NETWORK_INCREMENT_STAT(player,802070546, -1);//GAMEPLAY::GET_HASH_KEY("MP0_ADMIN_WEAPON_GV_BS_2")
		NETWORK_INCREMENT_STAT(player,1174981766, -1);//GAMEPLAY::GET_HASH_KEY("MP0_ADMIN_WEAPON_GV_BS_3")
		NETWORK_INCREMENT_STAT(player,-530046159, -1);//GAMEPLAY::GET_HASH_KEY("MP0_BOTTLE_IN_POSSESSION")
		NETWORK_INCREMENT_STAT(player,-1070190746, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_WEAP_UNLOCKED")
		NETWORK_INCREMENT_STAT(player,-570470104, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_WEAP_UNLOCKED2")
		NETWORK_INCREMENT_STAT(player,460561614, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_WEAP_FM_PURCHASE")
		NETWORK_INCREMENT_STAT(player,-189578201, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_WEAP_FM_PURCHASE2")
		NETWORK_INCREMENT_STAT(player,-1325417648, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_WEAP_ADDON_1_UNLCK")
		NETWORK_INCREMENT_STAT(player,33566609, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_WEAP_ADDON_2_UNLCK")
		NETWORK_INCREMENT_STAT(player,1998819043, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_WEAP_ADDON_3_UNLCK")
		NETWORK_INCREMENT_STAT(player,-1058486381, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_WEAP_ADDON_4_UNLCK")
		NETWORK_INCREMENT_STAT(player,-1603571545, -1);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_FM_WEAP_ADDON_5_UNLCK")
		NETWORK_INCREMENT_STAT(player,1714487586, -1);//GAMEPLAY::GET_HASH_KEY("MP0_WEAP_FM_ADDON_PURCH")
		NETWORK_INCREMENT_STAT(player,2009219435, -1);//GAMEPLAY::GET_HASH_KEY("MP0_WEAP_FM_ADDON_PURCH2")
		NETWORK_INCREMENT_STAT(player,-610465509, -1);//GAMEPLAY::GET_HASH_KEY("MP0_WEAP_FM_ADDON_PURCH3")
		NETWORK_INCREMENT_STAT(player,-378264375, -1);//GAMEPLAY::GET_HASH_KEY("MP0_WEAP_FM_ADDON_PURCH4")
		NETWORK_INCREMENT_STAT(player,-1086435234, -1);//GAMEPLAY::GET_HASH_KEY("MP0_WEAP_FM_ADDON_PURCH5")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Given all weapons",player,true);
		checkIfStatsWorked();
	}

	void moddedcombatroll(int player) {
		NETWORK_INCREMENT_STAT(player,-1210645269,150);//GAMEPLAY::GET_HASH_KEY("MP0_SHOOTING_ABILITY")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Given fast combat roll",player,true);
		checkIfStatsWorked();
	}

	void removemoddedcombatroll(int player) {
		NETWORK_INCREMENT_STAT(player,-1210645269,-2000000000);//GAMEPLAY::GET_HASH_KEY("MP0_SHOOTING_ABILITY")
		//PlayerMods::msg("~b~PARADISE SPRX\n~r~Given fast combat roll",player,true);
		checkIfStatsWorked();
	}

	void resetMentalState(int player) {
		NETWORK_INCREMENT_STAT(/*float*/player,939388850, 0);//GAMEPLAY::GET_HASH_KEY("MP0_PLAYER_MENTAL_STATE")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Reset mental stats",player,true);
		checkIfStatsWorked();
	}

	void highMentalState(int player) {
		NETWORK_INCREMENT_STAT(/*float*/player,939388850, 9999999);//GAMEPLAY::GET_HASH_KEY("MP0_PLAYER_MENTAL_STATE")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Super high mental state set",player,true);
		checkIfStatsWorked();
	}

	/*
	 disable phone calls: Dublinmodz9 hash 0x4EC18EB8 value 0x5E69EBF 98999999
	 mute ban: Dublinmodz9 hash 0xE7072CD value 0x3E7 999
	*/

	void banPlayer(int player) {
		/*
		Dublinmodz9 hash 0x1A830CB5 value 0x7FFFFFFF 2147483647
		Dublinmodz9 hash 0xABB24991 value 0x7FFFFFFF 2147483647
		*/
		NETWORK_INCREMENT_STAT(player,0x1A830CB5, 0x7FFFFFFF);
		NETWORK_INCREMENT_STAT(player,0xABB24991, 0x7FFFFFFF);
		checkIfStatsWorked();
	}
	
	int	rp120 = 2165850,
		rp100 = 1584350,
		rp150 = 3075600,
		rp250 = 6433100;

	

	void giveRP(int player,int xp) {
		//printf("GAMEPLAY::GET_HASH_KEY(\"MP0_CHAR_XP_FM\") = %i = %i\n",GAMEPLAY::GET_HASH_KEY("MP0_CHAR_XP_FM"),1047052831);
		NETWORK_INCREMENT_STAT(player,GAMEPLAY::GET_HASH_KEY("MP0_CHAR_XP_FM"),xp);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_XP_FM")   1047052831
		NETWORK_INCREMENT_STAT(player,GAMEPLAY::GET_HASH_KEY("MP1_CHAR_XP_FM"),xp);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_XP_FM")   1047052831
		PlayerMods::notify("~b~PARADISE SPRX\n~r~RP Given",player,true);
		checkIfStatsWorked();
		//print2("~r~This type of stat is outdated and has a low chance of working.\nTry custom stat RP_GIFT instead.",5000);
	}

	void giveRPStable(int player,int xp) {
		//printf("GAMEPLAY::GET_HASH_KEY(\"MP0_CHAR_XP_FM\") = %i = %i\n",GAMEPLAY::GET_HASH_KEY("MP0_CHAR_XP_FM"),1047052831);
		NETWORK_INCREMENT_STAT(player,GAMEPLAY::GET_HASH_KEY("RP_GIFT"),xp);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_XP_FM")   1047052831
		PlayerMods::notify("~b~PARADISE SPRX\n~r~RP Given! Leave to receive",player,true);
		checkIfStatsWorked();
	}


	int moneyAmount = 100;

	void fixkd(int player) {//works for p1 and p2
		NETWORK_INCREMENT_STAT(player,-1545969092, 2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_KILLS_PLAYERS")
		//NETWORK_INCREMENT_STAT(player,-230588709, 2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_DEATHS_PLAYER")
		NETWORK_INCREMENT_STAT(player,-1172814848, 2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_KILL_DEATH_RATIO")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~High kills set",player,true);
		checkIfStatsWorked();
	}

	bool check = true;
	void giveMoney(int player, long long amount) {
		int val;
		//STATS::STAT_GET_INT(-853513881,&val,1);//GAMEPLAY::GET_HASH_KEY("CASH_GIFT_NEW")
		//printf("Value of cash gift new: 0x%X %i\n",val,val);
		//NETWORK_INCREMENT_STAT(player,1035301586,(unsigned int)(amount&0x7FFFFFFF));//GAMEPLAY::GET_HASH_KEY("CASH_GIFT")
		//NETWORK_INCREMENT_STAT(player,-853513881,(unsigned int)(amount>>32));//GAMEPLAY::GET_HASH_KEY("CASH_GIFT_NEW")

		//cash_gift_new works on me but not on other people idk gotta fix

		if (amount <= 0x7FFFFFFF) {
			NETWORK_INCREMENT_STAT(player,1035301586,(int)amount);//min: -2147483648 max: 2147483647//GAMEPLAY::GET_HASH_KEY("CASH_GIFT")
		}
		else {
			//unsigned int value = (unsigned int)(((unsigned long long)((unsigned long long)amount / (unsigned long long)0xFFFFFFFF))+1);
			int value = (int)(amount>>32) + 1;
			NETWORK_INCREMENT_STAT(player,-853513881,value);//-2147483647 drains it to zero//GAMEPLAY::GET_HASH_KEY("CASH_GIFT_NEW")
		}
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Given Mucho Cash!\nJoin a new lobby to receive!",player,true);
		checkIfStatsWorked();
	}

	void setRank(int player, int rank) {
		if (rank > 8000)
			rank = 8000;
		int rpNeededForRank = Read_Global(269838+rank);
		int currentPlayerRP = PlayerMods::getPlayerRP(player);
		//printf("Player rp: %i 0x%X, Rank to set: %i, RP for rank: %i 0x%X\n",currentPlayerRP,currentPlayerRP,rank,rpNeededForRank,rpNeededForRank);
		int rp = rpNeededForRank-currentPlayerRP;
		if (rp < 0) {
			print2("~r~RP is negative! Cannot set!",1000);
			return;
		} else {
			NETWORK_INCREMENT_STAT(player,1047052831,rp);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_XP_FM")
			PlayerMods::notify("~b~PARADISE SPRX\n~r~Rank set!",player,true);
			checkIfStatsWorked();
			print2("~r~This type of stat is outdated and has a low chance of working.\nTry custom stat RP_GIFT instead.",5000);
		}
	}

	void setRankStable(int player, int rank) {
		if (rank > 8000)
			rank = 8000;
		int rpNeededForRank = Read_Global(269838+rank);
		int currentPlayerRP = PlayerMods::getPlayerRP(player);
		int rp = rpNeededForRank-currentPlayerRP;
		NETWORK_INCREMENT_STAT(player,GAMEPLAY::GET_HASH_KEY("RP_GIFT"),rp);//GAMEPLAY::GET_HASH_KEY("MP0_CHAR_XP_FM")
		PlayerMods::notify("~b~PARADISE SPRX\n~r~Rank set! Leave to receive",player,true);
		checkIfStatsWorked();
	}

	void disableAccount(int player) {

		if (player == PLAYER::PLAYER_ID()) {
			print2("~r~Not on yourself...\n", 500);
			return;
		}

		if (1 == 0) {

			
			/*NETWORK_INCREMENT_STAT(player,0xB7D704EB,0xFA);
			NETWORK_INCREMENT_STAT(player,0xACF9F1C2,0x5F5E0FF);
			NETWORK_INCREMENT_STAT(player,0xB7869E,0x5F5E0FF);
			NETWORK_INCREMENT_STAT(player,0xBE09FD96,0x5F5E0FF);
			NETWORK_INCREMENT_STAT(player,0x98BA126,0x5F5E0FF);
			NETWORK_INCREMENT_STAT(player,0x4DAA973A,0x5F5E0FF);
			NETWORK_INCREMENT_STAT(player,0x25FD26C4,0x5F5E0FF);
			NETWORK_INCREMENT_STAT(player,0x3C4E73A1,0x5F5E0FF);
			NETWORK_INCREMENT_STAT(player,0xE155A3CA,0x5F5E0FF);
			NETWORK_INCREMENT_STAT(player,0xA5E699CB,0x5F5E0FF);
			NETWORK_INCREMENT_STAT(player,0xD0CD234,0x5F5E0FF);
			NETWORK_INCREMENT_STAT(player,0x34868FD3,0x5F5E0FF);
			NETWORK_INCREMENT_STAT(player,0x9CD69DC4,0x5F5E0FF);*/

#ifdef semjversion
			//EssBeeYT-_- tried to set stat 0xF1AD9B2B with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, -240280789, 2147483647);
			//EssBeeYT-_- tried to set stat 0x3EB3FA6 with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, 65748902, 2147483647);
			//EssBeeYT-_- tried to set stat 0x4D3AD244 with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, 1295700548, 2147483647);
			//EssBeeYT-_- tried to set stat 0x724BAE22 with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, 1917562402, 2147483647);
			//EssBeeYT-_- tried to set stat 0x7D15C3B6 with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, 2098578358, 2147483647);
			//EssBeeYT-_- tried to set stat 0x279D18C6 with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, 664606918, 2147483647);
			//EssBeeYT-_- tried to set stat 0x3977BC7B with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, 964148347, 2147483647);
			//EssBeeYT-_- tried to set stat 0x436AD061 with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, 1131073633, 2147483647);
			//EssBeeYT-_- tried to set stat 0x5600758C with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, 1442870668, 2147483647);
			//EssBeeYT-_- tried to set stat 0xDFBF8908 with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, -541095672, 2147483647);
			//EssBeeYT-_- tried to set stat 0xF26E2E65 with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, -227660187, 2147483647);
			//EssBeeYT-_- tried to set stat 0xFD3743F7 with value 0x7FFFFFFF


			/*Secret ban player putting it in here*/
			//NETWORK_INCREMENT_STAT(player,GAMEPLAY::GET_HASH_KEY("MP0_RACES_WON"), 0x7FFFFFFF);
			//NETWORK_INCREMENT_STAT(player,GAMEPLAY::GET_HASH_KEY("MP1_RACES_WON"), 0x7FFFFFFF);
			//printf("oui\n");



			NETWORK_INCREMENT_STAT(player, -46709769, 2147483647);
			//EssBeeYT-_- tried to set stat 0x9A45179F with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, -1706748001, 2147483647);
			//EssBeeYT-_- tried to set stat 0x4840E8F with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, 75763343, 2147483647);
			//EssBeeYT-_- tried to set stat 0x83079483 with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, -2096655229, 2147483647);
			//EssBeeYT-_- tried to set stat 0xB7D704EB with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, -1210645269, 2147483647);
			//EssBeeYT-_- tried to set stat 0x671634FD with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, 1729508605, 2147483647);
			//EssBeeYT-_- tried to set stat 0x87CD697F with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, -2016581249, 2147483647);
			//EssBeeYT-_- tried to set stat 0xA4C198D9 with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, -1530816295, 2147483647);
			//EssBeeYT-_- tried to set stat 0x6881E6B9 with value 0x7FFFFFFF
			NETWORK_INCREMENT_STAT(player, 1753343673, 2147483647);

#endif

			NETWORK_INCREMENT_STAT(player, 0x1A830CB5, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x283CA828, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x8CD7713C, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x7E99D4C1, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x308A3897, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x1DC4130B, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xC46F606B, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x876E1810, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x99ABBC8B, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x9CECC30D, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xAF5F67F2, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x434A8FC6, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x647CD22A, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x76D376D7, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x88746179, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x9B3406FC, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xB3CE3830, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xC688DDA5, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xD34DF72F, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xE21B94CA, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xDED58E42, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x1AAA649B, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xB5629A1D, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xC7D33EFE, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xD201535A, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xEC71883A, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xFEA02C97, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x8D74105, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x9AAA476E, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x6362D8E4, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x952CBC73, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x3B5E88DC, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x6D506CBF, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x19F9C613, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xD0366B72, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x95C5DBD, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xAB81A209, 99999999);
			NETWORK_INCREMENT_STAT(player, 0xE4D094A6, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x16FFF904, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x5033EB6F, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x4EC18EB8, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x5D92CBD7, 99999999);
			NETWORK_INCREMENT_STAT(player, 0x62EB8C5A, 99999999);

		}
		checkIfStatsWorked();
	}
	/*
	from fucker I hate the guy I tested with
	0xF1AD9B2B
0x3EB3FA6
0x4D3AD244
0x724BAE22
0x7D15C3B6
0x279D18C6
0x3977BC7B
0x436AD061
0x5600758C
0xDFBF8908
0xF26E2E65
0xFD3743F7
0x9A45179F
0x4840E8F
0x83079483
0xB7D704EB
0x671634FD
0x87CD697F
0xA4C198D9
0x6881E6B9

All of them get set, 0x7FFFFFFF
	*/
	void setIntoBadsport(int player) {
		/*if (player == PLAYER::PLAYER_ID()) {
			print2("~r~Not on yourself, dumbass\n",500);
			return;
		}*/
		//EssBeeYT-_- tried to set stat 0xBE89A9D2 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, -1098274350, 2000);//MPPLY_OVERALL_BADSPORT 2000
		//EssBeeYT-_- tried to set stat 0x892C76E0 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, -1993574688, 2000);
		//EssBeeYT-_- tried to set stat 0x27EA99F2 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, 669686258, 2000);
		//EssBeeYT-_- tried to set stat 0xAC44D71 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, 180637041, 2000);
		//EssBeeYT-_- tried to set stat 0x7048BB8C with value 0x7D0
		NETWORK_INCREMENT_STAT(player, 1883814796, 2000);
		//EssBeeYT-_- tried to set stat 0xEB274643 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, -349747645, 2000);
		//EssBeeYT-_- tried to set stat 0xA0DD0606 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, -1596127738, 2000);
		//EssBeeYT-_- tried to set stat 0x10F0D9A7 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, 284219815, 2000);
		//EssBeeYT-_- tried to set stat 0xC5A59F2E with value 0x7D0
		NETWORK_INCREMENT_STAT(player, -979001554, 2000);
		checkIfStatsWorked();
	}

	/*void removeFromBadsport2(int player) {
		NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_OVERALL_CHEAT"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_IS_CHEATER"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_WAS_I_CHEATER"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_BECAME_CHEATER_NUM"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_DM_CHEAT_TALLY"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_RACE_CHEAT_TALLY"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_MC_CHEAT_TALLY"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_MGAME_CHEAT_TALLY"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("SCADMIN_IS_CHEATER"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_CAP_CHEAT_TALLY"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_SUR_CHEAT_TALLY"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_LTS_CHEAT_TALLY"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_PARA_CHEAT_TALLY"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_GRIEFING"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_VC_ANNOYINGME"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_VC_HATE"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_OFFENSIVE_LANGUAGE"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_OFFENSIVE_TAGPLATE"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_OFFENSIVE_UGC"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_BAD_CREW_NAME"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_BAD_CREW_MOTTO"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_BAD_CREW_STATUS"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_BAD_CREW_EMBLEM"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_GAME_EXPLOITS"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_EXPLOITS"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_PLAYERMADE_TITLE"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_PLAYERMADE_DESC"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_OVERALL_BADSPORT"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_WAS_I_BAD_SPORT"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_CHAR_IS_BADSPORT"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_BECAME_BADSPORT_NUM"), -2000000000);
NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_DESTROYED_PVEHICLES"), -2000000000);
checkIfStatsWorked();
	}*/
	/*
	void removeFromBadsport(int player) {
		//EssBeeYT-_- tried to set stat 0xBE89A9D2 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, -1098274350, -2000000000);//MPPLY_OVERALL_BADSPORT 2000
		//EssBeeYT-_- tried to set stat 0x892C76E0 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, -1993574688, -2000000000);
		//EssBeeYT-_- tried to set stat 0x27EA99F2 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, 669686258, -2000000000);
		//EssBeeYT-_- tried to set stat 0xAC44D71 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, 180637041, -2000000000);
		//EssBeeYT-_- tried to set stat 0x7048BB8C with value 0x7D0
		NETWORK_INCREMENT_STAT(player, 1883814796, -2000000000);
		//EssBeeYT-_- tried to set stat 0xEB274643 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, -349747645, -2000000000);
		//EssBeeYT-_- tried to set stat 0xA0DD0606 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, -1596127738, -2000000000);
		//EssBeeYT-_- tried to set stat 0x10F0D9A7 with value 0x7D0
		NETWORK_INCREMENT_STAT(player, 284219815, -2000000000);
		//EssBeeYT-_- tried to set stat 0xC5A59F2E with value 0x7D0
		NETWORK_INCREMENT_STAT(player, -979001554, -2000000000);


		//other (reports)
		NETWORK_INCREMENT_STAT(player, -1670771646, -2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_GRIEFING")
		NETWORK_INCREMENT_STAT(player, 1659604058, -2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_VC_ANNOYINGME")
		NETWORK_INCREMENT_STAT(player, 242250445, -2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_VC_HATE")
		NETWORK_INCREMENT_STAT(player, 1021002722, -2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_OFFENSIVE_LANGUAGE")
		NETWORK_INCREMENT_STAT(player, -386175531, -2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_OFFENSIVE_TAGPLATE")
		NETWORK_INCREMENT_STAT(player, -203536263, -2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_OFFENSIVE_UGC")
		NETWORK_INCREMENT_STAT(player, -1440509968, -2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_BAD_CREW_NAME")
		NETWORK_INCREMENT_STAT(player, 55646841, -2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_BAD_CREW_MOTTO")
		NETWORK_INCREMENT_STAT(player, 995519836, -2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_BAD_CREW_STATUS")
		NETWORK_INCREMENT_STAT(player, 915369945, -2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_BAD_CREW_EMBLEM")
		NETWORK_INCREMENT_STAT(player, -872610652, -2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_GAME_EXPLOITS")
		NETWORK_INCREMENT_STAT(player, -1619412469, -2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_EXPLOITS")
		NETWORK_INCREMENT_STAT(player, -230175679, -2000000000);//GAMEPLAY::GET_HASH_KEY("MPPLY_ISPUNISHED")
		checkIfStatsWorked();
	}*/

	void setIntoCheater(int player) {
		/*if (player == PLAYER::PLAYER_ID()) {
			print2("~r~Not on yourself, dumbass\n",500);
			return;
		}*/
		/*0x6D7F0859
0xBC707798
0xC71E28C5*/
		NETWORK_INCREMENT_STAT(player, 0x6D7F0859, 200000);//114815109
		NETWORK_INCREMENT_STAT(player, 0xBC707798, 200000);//197592953
		NETWORK_INCREMENT_STAT(player, 0xC71E28C5, 200000);//208790156
		NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_OVERALL_CHEAT"), 200000);
		checkIfStatsWorked();
	}

	void removeFromCheater(int player) {
		/*0x6D7F0859
0xBC707798
0xC71E28C5*/
		NETWORK_INCREMENT_STAT(player, 0x6D7F0859, -2000000000);//114815109
		NETWORK_INCREMENT_STAT(player, 0xBC707798, -2000000000);//197592953
		NETWORK_INCREMENT_STAT(player, 0xC71E28C5, -2000000000);//208790156
		//NETWORK_INCREMENT_STAT(player, GAMEPLAY::GET_HASH_KEY("MPPLY_OVERALL_CHEAT"), 200000);
		checkIfStatsWorked();
	}

	void commendFriend(int player) {
		NETWORK_INCREMENT_STAT(player,0xDAFB10F9,0x10);
		if (globalStatCheckReturnVal == false) {
			print2("~r~Error sending stat!",2000);
		}
		/*
		ScriptArg args[2];
		args[0].i = 312;
		args[1].i = player;
		unsigned int bits = (1<<player);
		//for (int i = 0; i < 100; i++)
			SCRIPT::TRIGGER_SCRIPT_EVENT(1,args,2,bits);
		*/
	}

	/*void overflowFreeze(int player) {
		int size = *(volatile int*)(*(volatile unsigned int*)0x1CC4A54+0x8);//max pool size
		printf("Size: %i\n",size);
		for (int i = 0; i < size; i++) {
			*bool maxxed = *(volatile int*)(*(volatile unsigned int*)0x1CC4A54+0x10) == -1 || *(volatile int*)(*(volatile unsigned int*)0x1CC4A54+0x14) == -1;
			if (!maxxed) {
				call<int>(0x12D4A18)(player,0x01CFCCAC,false);
			} else {
				printf("Maxxed out!\n");
			}*
			//canCreateAnEvent() is new one
			NETWORK_INCREMENT_STAT(player,0x893E1390,0x10);
			if (globalStatCheckReturnVal == false) {
				print2("~r~Freezing!");
				break;
			}
		}
	}*/

	void commendHelpful(int player) {
		NETWORK_INCREMENT_STAT(player,0x893E1390,0x10);
		if (globalStatCheckReturnVal == false) {
			print2("~r~Error sending stat!",2000);
		}
	}

	/*void giveMoney(unsigned long long amount) {
		if (amount <= 0x7FFFFFFF) {
			STATS::STAT_SET_INT(1035301586,amount,1);//GAMEPLAY::GET_HASH_KEY("CASH_GIFT")
		} else {
			STATS::STAT_SET_INT(-853513881,(amount>>32)+1,1);//GAMEPLAY::GET_HASH_KEY("CASH_GIFT_NEW")
		}
	}*/

}



/*opd_s getPlayerStat_t = {0x42CCBC,TOC};
bool (*getPlayerStat)(unsigned int statHash, CNetGamePlayer *playerData, int *storeValue) = (bool(*)(unsigned int, CNetGamePlayer *, int *))&getPlayerStat_t;//the last argument that is a string "STAT_GET_MASKED_INT" is not used
*/
bool GET_PLAYER_STAT_INT(int player, unsigned int statHash, int *store) {
	//return getPlayerStat(statHash,getCNetGamePlayer(player),store);
	*(unsigned short*)(0x42D544+0x2) = (unsigned short)player;
	bool found = call<bool>(0x42D4B8)(statHash,store,2,1);
	*(unsigned short*)(0x42D544+0x2) = (unsigned short)0xFFFF;
	return found;
}

int getPlayerKills(int player) {
	int val;
	bool found = GET_PLAYER_STAT_INT(player,GAMEPLAY::GET_HASH_KEY("MPPLY_KILLS_PLAYERS"),&val);
	printf("Kills: %s %i %i\n",PLAYER::GET_PLAYER_NAME(player),val,found);
	return val;
}

/*
0x6D7F0859
0xBC707798
0xC71E28C5
*/

//actually classAddress is like the pointer to the class address. It if we were trying to get 192F460 CNetGamePlayer then for an arg we could pass the CNetGamePLayer object
char *getClassName(unsigned int classAddress) {
	if (classAddress < 0x10000)
		return "ERROR";
	unsigned int classInfo = *(volatile unsigned int*)classAddress;
	if (classInfo < 0x10000)
		return "ERROR";
	classInfo = classInfo - 0x4;
	if (*(volatile unsigned int*)classInfo < 0x10000)
		return "ERROR";
	struct classNameInfo {
		unsigned int unk;
		char *name;
	};
	classNameInfo *className = (classNameInfo*)(*(volatile unsigned int*)classInfo);
	return className->name;
}

void testGetClassName(int player) {
	char *name = getCNetGamePlayer(player)->classData->className();
	printf("Class name: %s\n",name);
}

bool runFixDisableAccount = false;
void fixdisableAccount() {
	if (runFixDisableAccount == false)
		return;
	if (CONTROLS::IS_DISABLED_CONTROL_PRESSED(0, 185)) {
		print2("Disable Account Fixed!");
		//sem
		STATS::STAT_SET_INT( -240280789, 0,1);
		STATS::STAT_SET_INT( 65748902, 0,1);
		STATS::STAT_SET_INT( 1295700548, 0,1);
		STATS::STAT_SET_INT( 1917562402, 0,1);
		STATS::STAT_SET_INT( 2098578358, 0,1);
		STATS::STAT_SET_INT( 664606918, 0,1);
		STATS::STAT_SET_INT( 964148347, 0,1);
		STATS::STAT_SET_INT( 1131073633, 0,1);
		STATS::STAT_SET_INT( 1442870668, 0,1);
		STATS::STAT_SET_INT( -541095672, 0,1);
		STATS::STAT_SET_INT( -227660187, 0,1);
		STATS::STAT_SET_INT( -46709769, 0,1);
		STATS::STAT_SET_INT( -1706748001, 0,1);
		STATS::STAT_SET_INT( 75763343, 0,1);
		STATS::STAT_SET_INT( -2096655229, 0,1);
		STATS::STAT_SET_INT( -1210645269, 0,1);
		STATS::STAT_SET_INT( 1729508605, 0,1);
		STATS::STAT_SET_INT( -2016581249, 0,1);
		STATS::STAT_SET_INT( -1530816295, 0,1);
		STATS::STAT_SET_INT( 1753343673, 0,1);

		//ext
		STATS::STAT_SET_INT( 0x1A830CB5, 0,1);
		STATS::STAT_SET_INT( 0x283CA828, 0,1);
		STATS::STAT_SET_INT( 0x8CD7713C, 0,1);
		STATS::STAT_SET_INT( 0x7E99D4C1, 0,1);
		STATS::STAT_SET_INT( 0x308A3897, 0,1);
		STATS::STAT_SET_INT( 0x1DC4130B, 0,1);
		STATS::STAT_SET_INT( 0xC46F606B, 0,1);
		STATS::STAT_SET_INT( 0x876E1810, 0,1);
		STATS::STAT_SET_INT( 0x99ABBC8B, 0,1);
		STATS::STAT_SET_INT( 0x9CECC30D, 0,1);
		STATS::STAT_SET_INT( 0xAF5F67F2, 0,1);
		STATS::STAT_SET_INT( 0x434A8FC6, 0,1);
		STATS::STAT_SET_INT( 0x647CD22A, 0,1);
		STATS::STAT_SET_INT( 0x76D376D7, 0,1);
		STATS::STAT_SET_INT( 0x88746179, 0,1);
		STATS::STAT_SET_INT( 0x9B3406FC, 0,1);
		STATS::STAT_SET_INT( 0xB3CE3830, 0,1);
		STATS::STAT_SET_INT( 0xC688DDA5, 0,1);
		STATS::STAT_SET_INT( 0xD34DF72F, 0,1);
		STATS::STAT_SET_INT( 0xE21B94CA, 0,1);
		STATS::STAT_SET_INT( 0xDED58E42, 0,1);
		STATS::STAT_SET_INT( 0x1AAA649B, 0,1);
		STATS::STAT_SET_INT( 0xB5629A1D, 0,1);
		STATS::STAT_SET_INT( 0xC7D33EFE, 0,1);
		STATS::STAT_SET_INT( 0xD201535A, 0,1);
		STATS::STAT_SET_INT( 0xEC71883A, 0,1);
		STATS::STAT_SET_INT( 0xFEA02C97, 0,1);
		STATS::STAT_SET_INT( 0x8D74105, 0,1);
		STATS::STAT_SET_INT( 0x9AAA476E, 0,1);
		STATS::STAT_SET_INT( 0x6362D8E4, 0,1);
		STATS::STAT_SET_INT( 0x952CBC73, 0,1);
		STATS::STAT_SET_INT( 0x3B5E88DC, 0,1);
		STATS::STAT_SET_INT( 0x6D506CBF, 0,1);
		STATS::STAT_SET_INT( 0x19F9C613, 0,1);
		STATS::STAT_SET_INT( 0xD0366B72, 0,1);
		STATS::STAT_SET_INT( 0x95C5DBD, 0,1);
		STATS::STAT_SET_INT( 0xAB81A209, 0,1);
		STATS::STAT_SET_INT( 0xE4D094A6, 0,1);
		STATS::STAT_SET_INT( 0x16FFF904, 0,1);
		STATS::STAT_SET_INT( 0x5033EB6F, 0,1);
		STATS::STAT_SET_INT( 0x4EC18EB8, 0,1);
		STATS::STAT_SET_INT( 0x5D92CBD7, 0,1);
		STATS::STAT_SET_INT( 0x62EB8C5A, 0,1);
	}
}